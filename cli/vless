#!/bin/bash
#
# VLESS Reality VPN - Main CLI Interface
# Version: 1.0.0
#
# Usage: vless <command> [arguments]
#
# This is the main CLI wrapper that provides user-friendly commands
# for managing the VLESS Reality VPN server.
#

set -euo pipefail

# Installation paths
readonly INSTALL_ROOT="/opt/vless"
readonly LIB_DIR="${INSTALL_ROOT}/lib"
readonly CONFIG_DIR="${INSTALL_ROOT}/config"
readonly DATA_DIR="${INSTALL_ROOT}/data"

# Color codes
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly CYAN='\033[0;36m'
readonly NC='\033[0m' # No Color

# Check if running as root
check_root() {
    if [[ $EUID -ne 0 ]]; then
        echo -e "${RED}Error: This command must be run as root${NC}" >&2
        echo "Please use: sudo vless $*" >&2
        exit 1
    fi
}

# Show usage information
show_usage() {
    cat << EOF
${BLUE}╔══════════════════════════════════════════════════════════════╗${NC}
${BLUE}║          VLESS Reality VPN - CLI Management Tool            ║${NC}
${BLUE}╚══════════════════════════════════════════════════════════════╝${NC}

${CYAN}Usage:${NC}
  vless <command> [arguments]

${CYAN}User Management:${NC}
  add-user <username>       Create a new VPN user
  remove-user <username>    Remove an existing user
  list-users                List all users
  show-user <username>      Show user details and connection info

${CYAN}Service Operations:${NC}
  status                    Show service status
  start                     Start VLESS services
  stop                      Stop VLESS services
  restart                   Restart VLESS services
  logs [service]            Show logs (service: xray|nginx|all)

${CYAN}Maintenance:${NC}
  update                    Update VLESS to latest version
  backup                    Create backup of configuration
  test                      Test Xray configuration

${CYAN}Information:${NC}
  info                      Show server information
  help                      Show this help message

${CYAN}Examples:${NC}
  sudo vless add-user alice
  sudo vless list-users
  sudo vless status
  sudo vless logs xray

${YELLOW}Note:${NC} All commands require root privileges (use sudo)

EOF
}

# Source lib modules
source_modules() {
    local modules=(
        "user_management.sh"
        "service_operations.sh"
        "qr_generator.sh"
    )

    for module in "${modules[@]}"; do
        if [[ -f "${LIB_DIR}/${module}" ]]; then
            source "${LIB_DIR}/${module}"
        fi
    done
}

# Main command router
main() {
    # Show help if no arguments
    if [[ $# -eq 0 ]]; then
        show_usage
        exit 0
    fi

    local command="$1"
    shift

    case "$command" in
        add-user|adduser)
            check_root
            if [[ $# -eq 0 ]]; then
                echo -e "${RED}Error: Username required${NC}" >&2
                echo "Usage: vless add-user <username>" >&2
                exit 1
            fi
            source_modules
            create_user "$1"
            ;;

        remove-user|rmuser|deleteuser)
            check_root
            if [[ $# -eq 0 ]]; then
                echo -e "${RED}Error: Username required${NC}" >&2
                echo "Usage: vless remove-user <username>" >&2
                exit 1
            fi
            source_modules
            remove_user "$1"
            ;;

        list-users|ls|users)
            check_root
            source_modules
            list_users
            ;;

        show-user|show|user)
            check_root
            if [[ $# -eq 0 ]]; then
                echo -e "${RED}Error: Username required${NC}" >&2
                echo "Usage: vless show-user <username>" >&2
                exit 1
            fi
            source_modules
            get_user_info "$1"
            ;;

        status)
            check_root
            docker ps --filter "name=vless" --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            ;;

        start)
            check_root
            echo "Starting VLESS services..."
            docker-compose -f "${INSTALL_ROOT}/docker-compose.yml" up -d
            ;;

        stop)
            check_root
            echo "Stopping VLESS services..."
            docker-compose -f "${INSTALL_ROOT}/docker-compose.yml" down
            ;;

        restart)
            check_root
            echo "Restarting VLESS services..."
            docker-compose -f "${INSTALL_ROOT}/docker-compose.yml" restart
            ;;

        logs)
            check_root
            local service="${1:-}"
            if [[ -z "$service" ]] || [[ "$service" == "all" ]]; then
                docker-compose -f "${INSTALL_ROOT}/docker-compose.yml" logs -f --tail=100
            else
                docker-compose -f "${INSTALL_ROOT}/docker-compose.yml" logs -f --tail=100 "$service"
            fi
            ;;

        test)
            check_root
            echo "Testing Xray configuration..."
            docker exec vless_xray xray -test -config=/etc/xray/xray_config.json
            ;;

        info)
            check_root
            echo -e "${CYAN}VLESS Reality VPN Server Information${NC}"
            echo "─────────────────────────────────────"
            echo "Installation: ${INSTALL_ROOT}"
            echo "Network: $(docker network inspect vless_reality_net -f '{{(index .IPAM.Config 0).Subnet}}' 2>/dev/null || echo 'N/A')"
            echo "Port: $(jq -r '.inbounds[0].port' ${CONFIG_DIR}/xray_config.json 2>/dev/null || echo 'N/A')"
            echo "Destination: $(jq -r '.inbounds[0].streamSettings.realitySettings.dest' ${CONFIG_DIR}/xray_config.json 2>/dev/null || echo 'N/A')"
            echo "Users: $(jq -r '.users | length' ${DATA_DIR}/users.json 2>/dev/null || echo '0')"
            ;;

        help|--help|-h)
            show_usage
            ;;

        *)
            echo -e "${RED}Error: Unknown command '${command}'${NC}" >&2
            echo "Run 'vless help' to see available commands" >&2
            exit 1
            ;;
    esac
}

# Run main function
main "$@"
