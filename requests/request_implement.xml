<request>
    <!-- Метаданные и настройки по умолчанию -->
    <defaults>
        <thinking mode="interleaved" max_length="16000"/>
    </defaults>

    <!-- Определение роли -->
    <role>
        Вы - опытный Full-Stack разработчик, специализирующийся создании скриптов с использованием bash для linux платформ.
        Ваша экспертиза включает: Bash, Docker, Docker Compose, Python, тестирование и отладку.
    </role>

    <!-- Информация о проекте -->
    <project>
        <name>VLESS+Reality VPN</name>
        <architecture>
            <program_language>Bash, Python</program_language>
            <infrastructure>Docker Compose</infrastructure>
        </architecture>
    </project>

    <!-- Контекст -->
    <context>
        <file path="/PRD.md" description="Product Requirements Document"/>
        <file path="/PLAN.md" description="План проекта"/>
    </context>

    <!-- Требования -->
    <requirements>
        <requirement id="1">Реализовать задачи из PLAN.md по пункту ЭТАП 3: Скрипты обслуживания</requirement>
    </requirements>


    <!-- Задачи с улучшенной структурой -->
    <tasks>
        <task id="1" name="Анализ требований" depends_on="">
            <description>Изучение контекста и требований проекта</description>

            <step id="1.1" type="analysis">
                <actions>
                    <action>Изучить контекст(context)</action>
                    <action>Изучить требования(requirements)</action>
                </actions>
            </step>

            <step id="1.2" type="thinking">
                <description>Обдумать требования шаг за шагом</description>
                <use_defaults>thinking</use_defaults>
            </step>

            <step id="1.3" type="research">
                <action>Запросить актуальную документацию</action>
            </step>

            <step id="1.4" type="thinking">
                <description>Обдумать всю полученную информацию на полноту и корректность</description>
                <use_defaults>thinking</use_defaults>
            </step>

            <step id="1.5" type="refinement">
                <action>Скорректировать результаты анализа по итогам размышлений</action>
            </step>

            <step id="1.6" type="finalization">
                <action>Сформировать итоговый вариант анализа</action>
            </step>

            <step id="1.7" type="save">
                <action>Сохранить результат анализа</action>
                <output dir_ref="requests" file="analyses_implement.xml" format="xml"/>
            </step>

            <success_criteria>
                <criterion>Файл analyses_implement.xml создан и содержит полный анализ</criterion>
            </success_criteria>
        </task>

        <task id="2" name="Планирование" depends_on="1">
            <description>Формирование плана задач на основе анализа</description>

            <step id="2.1" type="planning">
                <action>Сформировать план задач с помощью субагента</action>
                <input dir_ref="requests" file="analyses_implement.xml"/>
            </step>

            <step id="2.2" type="thinking">
                <description>Обдумать план задач на корректность, эффективность, полноту</description>
                <use_defaults>thinking</use_defaults>
            </step>

            <step id="2.3" type="save">
                <action>Сохранить итоговый план</action>
                <output dir_ref="requests" file="plan_implement.xml" format="xml"/>
            </step>

            <success_criteria>
                <criterion>План задач создан и валидирован</criterion>
            </success_criteria>
        </task>

        <task id="3" name="Выполнение плана" depends_on="2">
            <description>Реализация запланированных задач</description>

            <step id="3.1" type="execution">
                <action>Выполнить план задач шаг за шагом с помощью субагентов</action>
                <input dir_ref="requests" file="plan_implement.xml"/>
            </step>

            <step id="3.2" type="validation">
                <action>Проверить, что план выполнен полностью</action>
            </step>

            <step id="3.3" type="correction">
                <action>Выполнить пропущенные задачи</action>
            </step>

            <step id="3.4" type="save">
                <action>Сохранить результаты плана</action>
                <output dir_ref="requests" file="result_implement.md" format="markdown"/>
            </step>

            <success_criteria>
                <criterion>Все задачи плана выполнены</criterion>
                <criterion>Результаты задокументированы</criterion>
            </success_criteria>
        </task>

        <task id="4" name="Тестирование" depends_on="3">
            <description>Создание и выполнение тестов</description>

            <step id="4.1" type="development">
                <action>Реализовать тесты на новый или измененный функционал</action>
                <output dir_ref="tests"/>
            </step>

            <step id="4.2" type="testing">
                <action>Выполнить тестирование</action>
            </step>

            <success_criteria>
                <criterion>Все тесты пройдены успешно</criterion>
            </success_criteria>
        </task>

        <task id="5" name="Документирование" depends_on="4">
            <description>Обновление документации проекта</description>

            <step id="5.1" type="documentation">
                <action>Обновить документацию</action>
                <outputs>
                    <output dir_ref="docs"/>
                    <output dir_ref="root" file="README.md"/>
                </outputs>
            </step>

            <step id="5.2" type="memory_update">
                <action>Обновить память проекта</action>
                <output dir_ref="root" file="CLAUDE.md"/>
                <constraints>
                    <constraint>Размер CLAUDE.md не должен превышать 40000 токенов</constraint>
                    <constraint>Хранить только актуальную информацию по проекту</constraint>
                </constraints>
                <best_practices>
                    <practice>Be specific: "Use 2-space indentation" is better than "Format code properly"</practice>
                    <practice>Use structure to organize: Format each individual memory as a bullet point and group related memories under descriptive markdown headings</practice>
                    <practice>Review periodically: Update memories as your project evolves to ensure Claude is always using the most up to date information and context</practice>
                </best_practices>
            </step>

            <step id="5.3" type="vcs">
                <action>Сделать коммит и пуш</action>
            </step>
        </task>

        <task id="6" name="Обновление плана" depends_on="5">
            <description>Отметка выполненных задач</description>

            <step id="6.1" type="update">
                <action>Отметить выполненные задачи в PLAN.md</action>
                <output dir_ref="root" file="PLAN.md"/>
            </step>
        </task>

        <task id="7" name="Финализация" depends_on="6">
            <description>Завершение итерации разработки</description>

            <step id="7.1" type="vcs">
                <action>Сделать финальный коммит и пуш</action>
            </step>
        </task>
    </tasks>

</request>