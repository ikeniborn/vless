<?xml version="1.0" encoding="UTF-8"?>
<removal_plan>
    <metadata>
        <project>VLESS+Reality VPN Management System</project>
        <operation>Remove Phase 5 Telegram Integration</operation>
        <date>2025-09-23</date>
        <version>1.1.0</version>
        <objective>Remove Telegram bot functionality while preserving backup_restore.sh and maintenance_utils.sh utilities</objective>
    </metadata>

    <scope>
        <preserve>
            <feature name="backup_restore.sh" reason="Essential for system backup and recovery operations"/>
            <feature name="maintenance_utils.sh" reason="Useful for automated system maintenance tasks"/>
            <feature name="Installation modes" reason="Useful deployment options (minimal, balanced, full)"/>
            <feature name="Phase 4 Security" reason="Critical security and monitoring features"/>
            <feature name="Core VPN functionality" reason="Primary system purpose"/>
        </preserve>
        <remove>
            <feature name="Telegram bot" reason="Adds unnecessary complexity without significant value"/>
            <feature name="Telegram bot management" reason="Related to removed bot functionality"/>
            <feature name="Python telegram dependencies" reason="No longer needed after bot removal"/>
            <feature name="Bot configuration templates" reason="Not needed without bot"/>
        </remove>
    </scope>

    <execution_steps>
        <!-- Step 1: Remove Telegram Bot Files -->
        <step number="1" category="file_removal">
            <title>Remove Telegram Bot Files</title>
            <description>Delete all Telegram bot related files completely</description>
            <actions>
                <action type="delete_file">
                    <file>/home/ikeniborn/Documents/Project/vless/modules/telegram_bot.py</file>
                    <reason>Main Telegram bot implementation - no longer needed</reason>
                </action>
                <action type="delete_file">
                    <file>/home/ikeniborn/Documents/Project/vless/modules/telegram_bot_manager.sh</file>
                    <reason>Bot management wrapper script - no longer needed</reason>
                </action>
                <action type="delete_file">
                    <file>/home/ikeniborn/Documents/Project/vless/deploy_telegram_bot.sh</file>
                    <reason>Bot deployment script - no longer needed</reason>
                </action>
                <action type="delete_file">
                    <file>/home/ikeniborn/Documents/Project/vless/config/bot_config.env</file>
                    <reason>Bot configuration template - no longer needed</reason>
                </action>
            </actions>
        </step>

        <!-- Step 2: Update Python Dependencies -->
        <step number="2" category="dependencies">
            <title>Clean Python Dependencies</title>
            <description>Remove Telegram-specific Python packages from requirements.txt</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/requirements.txt</file>
                    <changes>
                        <remove_lines>
                            <line number="4"># Core Telegram Bot Dependencies</line>
                            <line number="5">python-telegram-bot==20.7</line>
                        </remove_lines>
                        <update_title>
                            <old># VLESS+Reality VPN Management System - Python Dependencies</old>
                            <new># VLESS+Reality VPN Management System - Python Dependencies (QR Code Generation)</new>
                        </update_title>
                        <update_comment>
                            <old># Core Telegram Bot Dependencies</old>
                            <new># QR Code Generation Dependencies</new>
                        </update_comment>
                    </changes>
                    <rationale>Remove telegram-specific dependencies while keeping QR code generation for user configs</rationale>
                </action>
            </actions>
        </step>

        <!-- Step 3: Update Safety Utils Configuration -->
        <step number="3" category="configuration">
            <title>Remove Telegram References from Installation Profiles</title>
            <description>Update safety_utils.sh to remove INSTALL_TELEGRAM_BOT configuration</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/modules/safety_utils.sh</file>
                    <changes>
                        <remove_lines>
                            <line number="293">export INSTALL_TELEGRAM_BOT=false</line>
                            <line number="302">export INSTALL_TELEGRAM_BOT=false</line>
                            <line number="311">export INSTALL_TELEGRAM_BOT=prompt</line>
                        </remove_lines>
                    </changes>
                    <rationale>Remove Telegram bot configuration from all installation profiles</rationale>
                </action>
            </actions>
        </step>

        <!-- Step 4: Simplify Phase 5 in install.sh -->
        <step number="4" category="installer_update">
            <title>Simplify Phase 5 Implementation</title>
            <description>Update install.sh to remove Telegram integration and focus on backup/maintenance utilities</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/install.sh</file>
                    <changes>
                        <update_phase_constant>
                            <line number="41">
                                <old>readonly PHASE_5="Advanced Features"</old>
                                <new>readonly PHASE_5="Backup and Maintenance Utilities"</new>
                            </line>
                        </update_phase_constant>
                        <update_function_name>
                            <old>install_phase5</old>
                            <new>install_backup_maintenance</new>
                        </update_function_name>
                        <replace_function>
                            <function_name>install_phase5</function_name>
                            <start_line>565</start_line>
                            <end_line>686</end_line>
                            <new_implementation>
# Install Phase 5: Backup and Maintenance Utilities
install_backup_maintenance() {
    local profile="${INSTALLATION_MODE:-balanced}"

    echo -e "${YELLOW}${MENU_SEPARATOR}${NC}"
    echo -e "${WHITE}Phase 5: ${PHASE_5} (Profile: $profile)${NC}"
    echo -e "${YELLOW}${MENU_SEPARATOR}${NC}"

    log_info "Starting Phase 5: Backup and Maintenance Utilities..."

    # Check if previous phases are completed
    if ! command_exists docker; then
        log_error "Phase 1 must be completed first"
        return 1
    fi

    # Check if Phase 5 modules exist
    local required_modules=(
        "${SCRIPT_DIR}/modules/backup_restore.sh"
        "${SCRIPT_DIR}/modules/maintenance_utils.sh"
    )

    local module
    for module in "${required_modules[@]}"; do
        if [[ ! -f "$module" ]]; then
            log_error "Required Phase 5 module not found: $module"
            return 1
        fi
    done

    # Configure modules based on profile
    case "$profile" in
        "minimal")
            log_info "Installing essential backup utilities for minimal profile"
            ;;
        "balanced")
            log_info "Installing backup and essential maintenance utilities for balanced profile"
            ;;
        "full")
            log_info "Installing complete backup and maintenance utilities for full profile"
            ;;
    esac

    # Setup backup and restore system
    log_info "Setting up backup and restore system..."
    source "${SCRIPT_DIR}/modules/backup_restore.sh"
    if init_backup_system && schedule_automatic_backups; then
        log_success "Backup system configured successfully"
    else
        log_error "Backup system setup failed"
        return 1
    fi

    # Setup maintenance utilities (skip for minimal profile)
    if [[ "$profile" != "minimal" ]]; then
        log_info "Setting up maintenance utilities..."
        source "${SCRIPT_DIR}/modules/maintenance_utils.sh"
        if init_maintenance_utils && schedule_maintenance_tasks; then
            log_success "Maintenance utilities configured successfully"
        else
            log_error "Maintenance utilities setup failed"
            return 1
        fi
    else
        log_info "Skipping maintenance utilities for minimal profile"
    fi

    log_success "Phase 5 completed successfully"
    echo
    echo "ðŸŽ‰ All phases completed! Your VLESS+Reality VPN system is ready."
    echo
    echo "Next steps:"
    echo "  â€¢ Check system status: $0 --status"
    echo "  â€¢ Manage users: ${SCRIPT_DIR}/modules/user_management.sh"
    echo "  â€¢ View logs: ${SCRIPT_DIR}/modules/monitoring.sh logs"
    echo "  â€¢ Create backups: ${SCRIPT_DIR}/modules/backup_restore.sh full-backup"
    if [[ "$profile" != "minimal" ]]; then
        echo "  â€¢ Run maintenance: ${SCRIPT_DIR}/modules/maintenance_utils.sh"
    fi
    echo

    # Skip prompt in quick install mode
    if [[ "${QUICK_MODE:-false}" != "true" ]]; then
        read -p "Press Enter to continue..."
    fi
}
                            </new_implementation>
                        </replace_function>
                        <update_function_calls>
                            <call_location line="723">
                                <old>if ! install_phase5; then</old>
                                <new>if ! install_backup_maintenance; then</new>
                            </call_location>
                            <call_location line="853">
                                <old>6) install_phase5 ;;</old>
                                <new>6) install_backup_maintenance ;;</new>
                            </call_location>
                            <call_location line="959">
                                <old>install_phase5</old>
                                <new>install_backup_maintenance</new>
                            </call_location>
                        </update_function_calls>
                        <remove_telegram_checks>
                            <lines>239-240</lines>
                            <content>
                                <old>[[ -f "${SCRIPT_DIR}/modules/telegram_bot.py" ]] && \
       [[ -f "${SCRIPT_DIR}/modules/telegram_bot_manager.sh" ]]; then</old>
                            </content>
                            <replacement>Replace with check for backup_restore.sh and maintenance_utils.sh</replacement>
                        </remove_telegram_checks>
                    </changes>
                    <rationale>Simplify Phase 5 to focus only on backup and maintenance utilities, removing all Telegram-related functionality</rationale>
                </action>
            </actions>
        </step>

        <!-- Step 5: Update Tests -->
        <step number="5" category="test_updates">
            <title>Update Test Suite</title>
            <description>Remove or update tests related to Telegram functionality</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/tests/test_installation_modes.sh</file>
                    <changes>
                        <remove_telegram_tests>
                            <description>Remove test cases that verify Telegram bot installation</description>
                            <search_patterns>
                                <pattern>telegram</pattern>
                                <pattern>INSTALL_TELEGRAM_BOT</pattern>
                                <pattern>bot.*config</pattern>
                            </search_patterns>
                        </remove_telegram_tests>
                        <update_phase5_tests>
                            <description>Update Phase 5 tests to focus on backup and maintenance utilities</description>
                            <new_test_cases>
                                <test>verify_backup_system_installation</test>
                                <test>verify_maintenance_utils_installation</test>
                                <test>verify_profile_based_module_selection</test>
                            </new_test_cases>
                        </update_phase5_tests>
                    </changes>
                    <rationale>Align tests with new simplified Phase 5 functionality</rationale>
                </action>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/tests/test_installation_fixes.sh</file>
                    <changes>
                        <remove_telegram_references>
                            <description>Remove any test cases related to Telegram bot deployment or configuration</description>
                        </remove_telegram_references>
                    </changes>
                    <rationale>Remove obsolete Telegram-related test cases</rationale>
                </action>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/tests/run_optimization_tests.sh</file>
                    <changes>
                        <update_phase5_optimization_tests>
                            <description>Update optimization tests to focus on backup and maintenance performance</description>
                        </update_phase5_optimization_tests>
                    </changes>
                    <rationale>Focus optimization tests on remaining Phase 5 components</rationale>
                </action>
            </actions>
        </step>

        <!-- Step 6: Update Documentation -->
        <step number="6" category="documentation">
            <title>Update Documentation</title>
            <description>Remove Telegram bot references from all documentation files</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/docs/installation.md</file>
                    <changes>
                        <remove_sections>
                            <section>Telegram Bot Setup</section>
                            <section>Bot Configuration</section>
                            <section>Remote Management via Telegram</section>
                        </remove_sections>
                        <update_phase5_description>
                            <old>Phase 5: Advanced Features (Telegram bot, web dashboard, analytics)</old>
                            <new>Phase 5: Backup and Maintenance Utilities (automated backups, system maintenance)</new>
                        </update_phase5_description>
                    </changes>
                    <rationale>Remove obsolete documentation and update Phase 5 description</rationale>
                </action>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/docs/user_guide.md</file>
                    <changes>
                        <remove_sections>
                            <section>Telegram Bot Usage</section>
                            <section>Remote Commands</section>
                            <section>Bot Administration</section>
                        </remove_sections>
                        <update_management_section>
                            <description>Focus on SSH-based management and local utilities</description>
                        </update_management_section>
                    </changes>
                    <rationale>Remove bot-specific user guidance</rationale>
                </action>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/docs/api_reference.md</file>
                    <changes>
                        <remove_sections>
                            <section>Telegram Bot API</section>
                            <section>Bot Commands Reference</section>
                            <section>telegram_bot.py Module</section>
                            <section>telegram_bot_manager.sh Reference</section>
                        </remove_sections>
                    </changes>
                    <rationale>Remove bot API documentation</rationale>
                </action>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/docs/troubleshooting.md</file>
                    <changes>
                        <remove_sections>
                            <section>Telegram Bot Issues</section>
                            <section>Bot Token Problems</section>
                            <section>Bot Connection Errors</section>
                        </remove_sections>
                    </changes>
                    <rationale>Remove bot-specific troubleshooting content</rationale>
                </action>
            </actions>
        </step>

        <!-- Step 7: Update Project Memory -->
        <step number="7" category="project_memory">
            <title>Update CLAUDE.md Project Memory</title>
            <description>Update project memory to reflect removal of Telegram integration</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/CLAUDE.md</file>
                    <changes>
                        <update_overview>
                            <section>Project Overview</section>
                            <remove_lines>
                                <line>- **Remote Control**: Telegram bot integration for remote management</line>
                            </remove_lines>
                        </update_overview>
                        <update_structure>
                            <section>Core System Layout</section>
                            <remove_references>telegram_bot</remove_references>
                        </update_structure>
                        <update_module_structure>
                            <section>Project Repository Structure</section>
                            <remove_files>
                                <file>telegram_bot.py</file>
                                <file>telegram_bot_manager.sh</file>
                                <file>deploy_telegram_bot.sh</file>
                                <file>bot_config.env</file>
                            </remove_files>
                        </update_module_structure>
                        <update_phase5_description>
                            <section>Phase-Based Installation</section>
                            <old>- **Phase 5**: Advanced Features (Telegram bot, web dashboard, analytics)</old>
                            <new>- **Phase 5**: Backup and Maintenance Utilities (automated backups, system maintenance)</new>
                        </update_phase5_description>
                        <update_dependencies>
                            <section>Module Dependencies</section>
                            <remove_dependencies>
                                <dependency>telegram_bot_manager.sh</dependency>
                                <dependency>telegram_bot.py</dependency>
                            </remove_dependencies>
                        </update_dependencies>
                        <update_external_deps>
                            <section>External Dependencies</section>
                            <remove_python_deps>
                                <dependency>python-telegram-bot</dependency>
                            </remove_python_deps>
                        </update_external_deps>
                        <update_environment_vars>
                            <section>Environment Variables</section>
                            <remove_variables>
                                <variable>TELEGRAM_BOT_TOKEN</variable>
                                <variable>TELEGRAM_ADMIN_ID</variable>
                            </remove_variables>
                        </update_environment_vars>
                        <update_operations>
                            <section>Common Operations</section>
                            <remove_section>Telegram Bot Management</remove_section>
                        </update_operations>
                        <update_installation_modes>
                            <section>Installation Modes (v1.1.0)</section>
                            <update_mode_descriptions>
                                <mode name="Minimal">Remove Telegram references</mode>
                                <mode name="Balanced">Remove Telegram references</mode>
                                <mode name="Full">Remove Telegram references, focus on backup/maintenance</mode>
                            </update_mode_descriptions>
                        </update_installation_modes>
                        <update_recent_updates>
                            <section>Recent Updates</section>
                            <add_entry>
                                <version>v1.2.0</version>
                                <title>Phase 5 Simplification</title>
                                <description>Removed Telegram integration, simplified Phase 5 to focus on backup and maintenance utilities</description>
                            </add_entry>
                        </update_recent_updates>
                    </changes>
                    <rationale>Ensure project memory accurately reflects the simplified system architecture</rationale>
                </action>
            </actions>
        </step>

        <!-- Step 8: Update Docker Compose (if applicable) -->
        <step number="8" category="container_config">
            <title>Update Container Configuration</title>
            <description>Remove any Telegram bot service definitions from Docker Compose</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/config/docker-compose.yml</file>
                    <changes>
                        <remove_services>
                            <service>telegram-bot</service>
                            <service>bot-service</service>
                        </remove_services>
                        <remove_volumes>
                            <volume>bot-data</volume>
                            <volume>bot-config</volume>
                        </remove_volumes>
                    </changes>
                    <rationale>Clean up container configuration to remove bot-related services</rationale>
                    <conditional>Only if Docker Compose contains bot services</conditional>
                </action>
            </actions>
        </step>

        <!-- Step 9: Update README.md -->
        <step number="9" category="project_readme">
            <title>Update Project README</title>
            <description>Update README.md to reflect simplified system without Telegram integration</description>
            <actions>
                <action type="edit_file">
                    <file>/home/ikeniborn/Documents/Project/vless/README.md</file>
                    <changes>
                        <update_features_list>
                            <remove_feature>Telegram bot integration for remote management</remove_feature>
                        </update_features_list>
                        <update_phase_descriptions>
                            <phase number="5">
                                <old>Advanced Features (Telegram bot, web dashboard)</old>
                                <new>Backup and Maintenance Utilities</new>
                            </phase>
                        </update_phase_descriptions>
                        <update_requirements>
                            <remove_requirement>Telegram Bot API token</remove_requirement>
                        </update_requirements>
                    </changes>
                    <rationale>Ensure README accurately represents current system capabilities</rationale>
                    <conditional>Only if README.md exists</conditional>
                </action>
            </actions>
        </step>

        <!-- Step 10: Validation and Testing -->
        <step number="10" category="validation">
            <title>Validation and Testing</title>
            <description>Verify that all changes are consistent and the system functions correctly</description>
            <actions>
                <action type="run_tests">
                    <test_suite>/home/ikeniborn/Documents/Project/vless/tests/run_all_tests.sh</test_suite>
                    <expected_outcome>All tests pass without Telegram-related failures</expected_outcome>
                </action>
                <action type="syntax_check">
                    <target>/home/ikeniborn/Documents/Project/vless/install.sh</target>
                    <command>bash -n install.sh</command>
                </action>
                <action type="grep_check">
                    <description>Verify no residual Telegram references remain</description>
                    <command>grep -r "telegram\|TELEGRAM" /home/ikeniborn/Documents/Project/vless/ --exclude-dir=.git</command>
                    <expected_outcome>No matches found (except in this plan file)</expected_outcome>
                </action>
                <action type="functional_test">
                    <description>Test Phase 5 installation in minimal, balanced, and full modes</description>
                    <test_cases>
                        <case>INSTALLATION_MODE=minimal ./install.sh --phase=5</case>
                        <case>INSTALLATION_MODE=balanced ./install.sh --phase=5</case>
                        <case>INSTALLATION_MODE=full ./install.sh --phase=5</case>
                    </test_cases>
                </action>
            </actions>
        </step>
    </execution_steps>

    <risk_assessment>
        <risks>
            <risk level="low">
                <description>Users who relied on Telegram bot for remote management will need to use SSH</description>
                <mitigation>SSH access provides complete system control and is more secure</mitigation>
            </risk>
            <risk level="low">
                <description>Documentation may temporarily be inconsistent during update process</description>
                <mitigation>Follow step-by-step plan to ensure comprehensive updates</mitigation>
            </risk>
            <risk level="medium">
                <description>Tests may fail if Telegram references are not completely removed</description>
                <mitigation>Run validation step thoroughly and fix any remaining references</mitigation>
            </risk>
        </risks>
        <benefits>
            <benefit>Reduced system complexity and maintenance overhead</benefit>
            <benefit>Eliminated Python dependencies and attack surface</benefit>
            <benefit>Simplified installation and configuration process</benefit>
            <benefit>Improved resource utilization without bot processes</benefit>
            <benefit>Focus on core VPN functionality and essential utilities</benefit>
        </benefits>
    </risk_assessment>

    <rollback_plan>
        <description>In case issues arise during removal, the following rollback steps can be taken</description>
        <steps>
            <step>Restore files from git history: git checkout HEAD~1 -- [affected_files]</step>
            <step>Reinstall Python dependencies: pip install -r requirements.txt</step>
            <step>Restore original install.sh Phase 5 function</step>
            <step>Restore original safety_utils.sh configuration</step>
            <step>Run git reset --hard HEAD~1 if all changes need to be reverted</step>
        </steps>
    </rollback_plan>

    <success_criteria>
        <criteria>
            <criterion>All Telegram bot files are completely removed</criterion>
            <criterion>Python requirements.txt contains only necessary dependencies</criterion>
            <criterion>install.sh Phase 5 focuses only on backup and maintenance utilities</criterion>
            <criterion>All installation modes work without Telegram references</criterion>
            <criterion>Tests pass without Telegram-related failures</criterion>
            <criterion>Documentation is consistent and up-to-date</criterion>
            <criterion>System functionality is preserved for core VPN operations</criterion>
            <criterion>Backup and maintenance utilities remain fully functional</criterion>
        </criteria>
    </success_criteria>

    <post_completion_tasks>
        <task>Update version number to 1.2.0 to reflect major simplification</task>
        <task>Create git commit documenting the Telegram integration removal</task>
        <task>Test complete installation flow from scratch</task>
        <task>Verify all user management and VPN functionality remains intact</task>
        <task>Update any CI/CD configurations to remove Telegram-related steps</task>
    </post_completion_tasks>
</removal_plan>