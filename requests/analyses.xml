<?xml version="1.0" encoding="UTF-8"?>
<analysis>
  <project>
    <name>VLESS+Reality VPN - Stage 4: Docker Integration</name>
    <date>2025-09-25</date>
    <stage>4</stage>
  </project>

  <requirements>
    <requirement id="1">
      <title>Docker Compose Configuration</title>
      <description>Create docker-compose.yml for Xray container orchestration</description>
      <components>
        <component>Docker Compose version 3.8</component>
        <component>Xray service with teddysun/xray:latest image</component>
        <component>Port mapping 443:443</component>
        <component>Volume mounts for config and logs</component>
        <component>Restart policy: unless-stopped</component>
        <component>Optional health check configuration</component>
      </components>
    </requirement>

    <requirement id="2">
      <title>Service Management Functions</title>
      <description>Implement Docker service control functions in vless-manager.sh</description>
      <functions>
        <function>
          <name>start_service</name>
          <purpose>Start Xray container using docker compose up -d</purpose>
        </function>
        <function>
          <name>stop_service</name>
          <purpose>Stop Xray container using docker compose down</purpose>
        </function>
        <function>
          <name>restart_service</name>
          <purpose>Restart Xray container using docker compose restart</purpose>
        </function>
        <function>
          <name>check_service_status</name>
          <purpose>Check container status using docker compose ps</purpose>
        </function>
        <function>
          <name>view_logs</name>
          <purpose>Display container logs using docker compose logs</purpose>
        </function>
        <function>
          <name>container_health_check</name>
          <purpose>Check container health status using docker inspect</purpose>
        </function>
      </functions>
    </requirement>

    <requirement id="3">
      <title>CLI Integration</title>
      <description>Add new commands to vless-manager.sh CLI interface</description>
      <commands>
        <command>
          <name>start</name>
          <description>Start the VPN service</description>
        </command>
        <command>
          <name>stop</name>
          <description>Stop the VPN service</description>
        </command>
        <command>
          <name>restart</name>
          <description>Restart the VPN service</description>
        </command>
        <command>
          <name>status</name>
          <description>Show service status</description>
        </command>
        <command>
          <name>logs</name>
          <description>View service logs</description>
        </command>
      </commands>
    </requirement>

    <requirement id="4">
      <title>Installation Integration</title>
      <description>Integrate docker-compose.yml creation into installation process</description>
      <tasks>
        <task>Call create_docker_compose() during installation</task>
        <task>Verify docker-compose.yml creation</task>
        <task>Set proper file permissions (644)</task>
      </tasks>
    </requirement>
  </requirements>

  <technical_details>
    <docker_compose>
      <version>3.8</version>
      <service_name>xray</service_name>
      <image>teddysun/xray:latest</image>
      <restart_policy>unless-stopped</restart_policy>
      <ports>
        <port>443:443</port>
      </ports>
      <volumes>
        <volume>./config/server.json:/etc/xray/config.json:ro</volume>
        <volume>./logs:/var/log/xray</volume>
      </volumes>
      <healthcheck>
        <test>["CMD", "nc", "-zv", "localhost", "443"]</test>
        <interval>30s</interval>
        <timeout>10s</timeout>
        <retries>3</retries>
        <start_period>40s</start_period>
      </healthcheck>
    </docker_compose>
  </technical_details>

  <implementation_notes>
    <note>Docker and Docker Compose must be installed before service management</note>
    <note>All service commands require sudo privileges</note>
    <note>Service functions should check Docker availability</note>
    <note>Proper error handling with colored output</note>
    <note>Logs should be limited to recent entries for better UX</note>
    <note>Health checks are optional but recommended</note>
  </implementation_notes>

  <security_considerations>
    <consideration>Docker socket access requires root/sudo</consideration>
    <consideration>Config files mounted as read-only</consideration>
    <consideration>Logs directory with restricted permissions</consideration>
    <consideration>No sensitive data in docker-compose.yml</consideration>
  </security_considerations>

  <testing_requirements>
    <test>Test service start/stop/restart operations</test>
    <test>Verify container health checks</test>
    <test>Test log viewing functionality</test>
    <test>Verify docker-compose.yml generation</test>
    <test>Test error handling when Docker is not installed</test>
    <test>Test CLI command integration</test>
  </testing_requirements>
</analysis>